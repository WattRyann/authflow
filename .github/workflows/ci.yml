name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
      fail-fast: true

    steps:
    - uses: actions/checkout@v4

    - name: 设置 Node.js 和 Yarn
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: yarn.lock

    - name: 启用 Corepack 并设置 Yarn 4.6.0
      run: |
        corepack enable
        corepack prepare yarn@4.6.0 --activate
        yarn --version  # 验证版本，应输出 4.6.0

    - name: 安装依赖
      run: yarn install --frozen-lockfile

    - name: 配置测试环境
      run: |
        cp .env.example .env.test
        echo "NODE_ENV=test" >> .env.test

    - name: 运行测试
      run: yarn test
      env:
        CI: true

    - name: 上传覆盖率报告
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        fail_ci_if_error: false

    - name: 配置并构建生产环境
      run: |
        cp .env.example .env.production
        echo "NODE_ENV=production" >> .env.production
    - name: 构建项目
      run: yarn build
      env:
        CI: true

  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: 设置 Node.js 和 Yarn
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'yarn'
        cache-dependency-path: yarn.lock

    - name: 启用 Corepack 并设置 Yarn 4.6.0
      run: |
        corepack enable
        corepack prepare yarn@4.6.0 --activate
        yarn --version

    - name: 安装依赖
      run: yarn install --frozen-lockfile

    - name: 配置生产环境变量
      run: |
        cat <<EOT > .env.production
        DATABASE_URL="${{ secrets.DATABASE_URL }}"
        JWT_ACCESS_SECRET="${{ secrets.SECRET_KEY }}"
        JWT_REFRESH_SECRET="${{ secrets.REFRESH_SECRET_KEY }}"
        SECRET_KEY="${{ secrets.SECRET_KEY }}"
        REFRESH_SECRET_KEY="${{ secrets.REFRESH_SECRET_KEY }}"
        ALGORITHM="HS256"
        MAIL_USERNAME="${{ secrets.MAIL_USERNAME }}"
        MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}"
        MAIL_FROM="${{ secrets.MAIL_FROM }}"
        MAIL_PORT=587
        MAIL_SERVER="smtp.gmail.com"
        MAIL_SSL_TLS=false
        MAIL_STARTTLS=true
        MAIL_USE_CREDENTIALS=true
        VERIFICATION_CODE_LENGTH=6
        VERIFICATION_CODE_EXPIRE_MINUTES=10
        REDIS_URL="${{ secrets.REDIS_URL }}"
        REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}"
        REDIS_PORT=6379
        REDIS_DB=0
        GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
        GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}"
        GITHUB_CLIENT_ID="${{ secrets.GITHUB_CLIENT_ID }}"
        GITHUB_CLIENT_SECRET="${{ secrets.GITHUB_CLIENT_SECRET }}"
        BASE_URL="${{ secrets.BASE_URL }}"
        ALLOWED_ORIGINS="${{ secrets.ALLOWED_ORIGINS }}"
        NODE_ENV="production"
        EOT

    - name: 部署到 Vercel
      run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}